# {{{ Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
# }}}
# {{{ General
unbind-key C-b
set-option -g prefix 'C-\' # set global session or window option to use this prefix
bind-key 'C-\' send-prefix # Binding for sending prefix in prefix-table

bind-key e new-window -n '~/.tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"Config reloaded\"'" # binding to source and reload .tmux.conf
bind-key r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced' # binding to reload tmux conf
bind-key C-f command-prompt -p find-session 'switch-client -t %%' # find session
# }}}
# {{{ Vim-tmux navigation
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l
bind-key -T copy-mode-vi C-h select-pane -L # Copy mode (entered by prefix + [) allow bindings for pane selection.
bind-key -T copy-mode-vi C-j select-pane -D # -T copy-mode-vi means create bindings for copy-mode-vi key-table
bind-key -T copy-mode-vi C-k select-pane -U # Tmux also has direct-access mode
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L" # if-shell runs command in shell
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D" # if response is success then call send-keys
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U" # else call select-pane
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R" # -n, alias to -T root, runs command without prefix
bind-key -r H resize-pane -L 10 # Bindings for repeatable window resize commands
bind-key -r J resize-pane -D 10
bind-key -r K resize-pane -U 10
bind-key -r L resize-pane -R 10
#}}}
#{{{ Display and interaction
set-option -g base-index 1                       # start windows numbering at 1
set-option -g default-terminal "screen-256color" # Set session level windows terminal, defaults $TERM env variable
set-option -g history-limit 5000                 # max number of lines held in window history.
set-option -g mouse on                           # Capture mouse and allow mouse events to be bound as key bindings
set-option -g renumber-windows on                # renumber windows when a window is closed
set-option -g set-titles on                      # set terminal title for client
set-option -s escape-time 10                     # 10 milliseconds wait for determining escape is a part of a function or meta key sequences
set-option -sg repeat-time 600                   # Allow multiple command to be entered without pressing the prefix-key again in 600 milliseconds
setw -g automatic-rename on                      # rename window to reflect current program
setw -g monitor-bell off                         # turn off monitor for a bell in the window
setw -g pane-base-index 1                        # make pane numbering consistent with windows
setw -g xterm-keys on                            # generate xterm-style function key sequences.
# }}}
